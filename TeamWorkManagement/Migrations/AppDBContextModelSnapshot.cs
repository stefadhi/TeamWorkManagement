// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamWorkManagement.Data;

#nullable disable

namespace TeamWorkManagement.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeTaskToDo", b =>
                {
                    b.Property<int>("EmployeesID")
                        .HasColumnType("int");

                    b.Property<int>("TasksToDoID")
                        .HasColumnType("int");

                    b.HasKey("EmployeesID", "TasksToDoID");

                    b.HasIndex("TasksToDoID");

                    b.ToTable("EmployeeTaskToDo");
                });

            modelBuilder.Entity("TeamWorkManagement.Model.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TeamWorkManagement.Model.EmployeeAssignmentHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeAssignmentHistories");
                });

            modelBuilder.Entity("TeamWorkManagement.Model.TaskToDo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TasksToDo");
                });

            modelBuilder.Entity("TeamWorkManagement.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID")
                        .IsUnique()
                        .HasFilter("[EmployeeID] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmployeeTaskToDo", b =>
                {
                    b.HasOne("TeamWorkManagement.Model.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamWorkManagement.Model.TaskToDo", null)
                        .WithMany()
                        .HasForeignKey("TasksToDoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeamWorkManagement.Model.EmployeeAssignmentHistory", b =>
                {
                    b.HasOne("TeamWorkManagement.Model.Employee", "Employee")
                        .WithMany("EmployeeAssignmentHistories")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TeamWorkManagement.Model.User", b =>
                {
                    b.HasOne("TeamWorkManagement.Model.Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("TeamWorkManagement.Model.User", "EmployeeID");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TeamWorkManagement.Model.Employee", b =>
                {
                    b.Navigation("EmployeeAssignmentHistories");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
